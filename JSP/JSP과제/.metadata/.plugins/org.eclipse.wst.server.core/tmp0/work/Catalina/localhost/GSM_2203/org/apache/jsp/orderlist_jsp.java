/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-10-06 02:33:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.sql.*;

public final class orderlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/dbCon.jsp", Long.valueOf(1664880171225L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormatSymbols");
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

request.setCharacterEncoding("UTF-8");
Class.forName("oracle.jdbc.OracleDriver");
Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");

      out.write('\r');
      out.write('\n');
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<section style=\"position:fixed; width:100%; height:100%; top:70px; background-color:gray; left:0'\">\r\n");
      out.write("	\r\n");
      out.write("	<h2 style=\"display:fixed; text-align:center;\">주문 조회 페이지 </h2>\r\n");
      out.write("	<form name=\"frm\" style=\"display:flex; align-items:center; justify-content:center; text-align:center;\">\r\n");
      out.write("		<table border=\"1\" style=\"border-collapse: collapse\">\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td colspan=\"9\" style=\"text-align:right; border-left: hidden; border-top: hidden; border-right: hidden\"><a href=\"order.jsp\">주문하기</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>주문번호</td>\r\n");
      out.write("				<td>고객번호</td>\r\n");
      out.write("				<td>고객이름</td>\r\n");
      out.write("				<td>메뉴이름</td>\r\n");
      out.write("				<td>수량</td>\r\n");
      out.write("				<td>지불금액</td>\r\n");
      out.write("				<td>주문일자</td>\r\n");
      out.write("				<td>수정</td>\r\n");
      out.write("				<td>삭제</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			");

				request.setCharacterEncoding("UTF-8");
				PreparedStatement pstmt = null;
			
				try{
					String sql="select o.orderno, o.custno, o.custname, m.menuname, o.amount, o.amount*m.price, o.orderdate from order_tbl o ,menu_tbl m where o.menuno = m.menuno";
					pstmt = conn.prepareStatement(sql);
					ResultSet rs = pstmt.executeQuery();
					int hello=0;
					while(rs.next()){
						hello=Integer.valueOf(rs.getString(6));
						DecimalFormat DF = new DecimalFormat("###,###");
						String price = DF.format(hello);
						
						
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print(rs.getString(1));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(rs.getString(2));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(rs.getString(4));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(price);
      out.write("원</td>\r\n");
      out.write("							<td>");
      out.print(rs.getDate(7));
      out.write("</td>\r\n");
      out.write("							<td><a href=\"modify.jsp?orderno=");
      out.print(rs.getString(1));
      out.write("\">주문 수정</a></td>\r\n");
      out.write("							<td><a href=\"action2.jsp?order_no=");
      out.print(rs.getString(1));
      out.write("&mode=delete\">주문 삭제</a></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						\r\n");
      out.write("						");

						
					}
				}
				catch(Exception e){
					e.printStackTrace();
				}
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
