/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-10-06 02:25:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/dbCon.jsp", Long.valueOf(1664880171225L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

request.setCharacterEncoding("UTF-8");
Class.forName("oracle.jdbc.OracleDriver");
Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src = \"check.js\"></script>\r\n");
      out.write("	<section style=\"position:fixed; width:100%; height:100%; top:70px; background-color:gray; left:0'\">\r\n");
      out.write("	\r\n");
      out.write("	<h2 style=\"display:fixed; text-align:center;\">주문 수정하기 </h2>\r\n");
      out.write("		\r\n");
      out.write("		<form name=\"modify_frm\" method=\"post\" action=\"action2.jsp\" style=\"display:flex; align-items:center; justify-content:center; text-align:center;\">\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>주문번호</td>\r\n");
      out.write("				\r\n");
      out.write("				");

					request.setCharacterEncoding("UTF-8");
					String orderno = request.getParameter("orderno");
					String sql = "select * from order_tbl where orderno = ? ";
					PreparedStatement pstmt = null;
					String max_custno = "";
					String custno = "";
					String custname = "";
					String menu = "";
					String amount = "";
					Date custdate = null;
					try{
						pstmt = conn.prepareStatement(sql);
						pstmt.setString(1,orderno);
						ResultSet rs = pstmt.executeQuery();
						rs.next();
						orderno = rs.getString(1);
						custno = rs.getString(2);
						custname = rs.getString(3);
						menu = rs.getString(4);
						amount = rs.getString(5);
						custdate = rs.getDate(6);
					}
					catch(Exception e){
						e.printStackTrace();
					}
				
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				<td><input type=\"text\" value=\"");
      out.print(orderno );
      out.write("\" name = \"order_no\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>고객번호</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"custno\" value=\"");
      out.print(custno);
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>고객이름</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"custname\" value=\"");
      out.print(custname);
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>메뉴번호</td>\r\n");
      out.write("				\r\n");
      out.write("				<td>\r\n");
      out.write("				<input type=\"radio\" value=\"10001\" name=\"menu\" ");
if(menu.equals("10001")) out.println("checked"); 
      out.write(">아메리카노 \r\n");
      out.write("				<input type=\"radio\" value=\"10002\" name=\"menu\" ");
if(menu.equals("10002")) out.println("checked"); 
      out.write(">카페 라떼 \r\n");
      out.write("				<input type=\"radio\" value=\"10003\" name=\"menu\" ");
if(menu.equals("10003")) out.println("checked"); 
      out.write(">카페 모카 \r\n");
      out.write("				<input type=\"radio\" value=\"10004\" name=\"menu\" ");
if(menu.equals("10004")) out.println("checked"); 
      out.write(">돌체 라떼 \r\n");
      out.write("				<input type=\"radio\" value=\"10005\" name=\"menu\" ");
if(menu.equals("10005")) out.println("checked"); 
      out.write(">콜드 브루\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>수량</td>\r\n");
      out.write("				<td><select name=\"amount\">\r\n");
      out.write("					<option value=\"1\" ");
if(amount.equals("1")) out.println("selected"); 
      out.write(">1개(추가 주문 시 선택)</option>\r\n");
      out.write("					<option value=\"2\" ");
if(amount.equals("2")) out.println("selected"); 
      out.write(">2</option>\r\n");
      out.write("					<option value=\"3\" ");
if(amount.equals("3")) out.println("selected"); 
      out.write(">3</option>\r\n");
      out.write("					<option value=\"4\" ");
if(amount.equals("4")) out.println("selected"); 
      out.write(">4</option>\r\n");
      out.write("					<option value=\"5\" ");
if(amount.equals("5")) out.println("selected"); 
      out.write(">5</option>\r\n");
      out.write("					<option value=\"6\" ");
if(amount.equals("6")) out.println("selected"); 
      out.write(">6</option>\r\n");
      out.write("					<option value=\"7\" ");
if(amount.equals("7")) out.println("selected"); 
      out.write(">7</option>\r\n");
      out.write("					<option value=\"8\" ");
if(amount.equals("8")) out.println("selected"); 
      out.write(">8</option>\r\n");
      out.write("					<option value=\"9\" ");
if(amount.equals("9")) out.println("selected"); 
      out.write(">9</option>\r\n");
      out.write("					<option value=\"10\" ");
if(amount.equals("10")) out.println("selected"); 
      out.write(">10</option>\r\n");
      out.write("				</select></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>주문일자</td>\r\n");
      out.write("				<td><input type=\"text\" placeholder=\"예)20220106\" name=\"custdate\" value=\"");
      out.print(custdate);
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\">\r\n");
      out.write("				<input type = \"submit\" value=\"수정하기\" onclick=\"return rere_modify()\">&nbsp;&nbsp;&nbsp;\r\n");
      out.write("				<input type = \"reset\" value=\"다시하기\" onclick=\"return rere_reset()\">\r\n");
      out.write("				<input type=\"hidden\" name=\"mode\" value=\"update\">\r\n");
      out.write("					</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("		</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	\r\n");
      out.write("	</section>\r\n");
      out.write("	<script>\r\n");
      out.write("	document.modify_frm.menu[");
      out.print(menu);
      out.write("].checked();\r\n");
      out.write("	var amount = document.modify_frm.amount\r\n");
      out.write("	for(var i = 0; i != amount.length; i ++){\r\n");
      out.write("		if amount[i].value == ");
      out.print(amount);
      out.write("){\r\n");
      out.write("			amount[i].selected = true;\r\n");
      out.write("		}\r\n");
      out.write("	}</script>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
