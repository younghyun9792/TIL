/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-10-11 15:29:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import DBPKG.Util;

public final class return_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("DBPKG.Util");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"check.js\"></script>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<section style=\"position:fixed; width:100%; height:100%; top:70px; left:0; background:beige; text-align:center\">\r\n");
      out.write("		<h3>도서 반납</h3>\r\n");
      out.write("		<form method=\"post\" action=\"action.jsp\" name=\"borrow_frm\" style=\"display:flex; align-items:center; justify-content:center; text-align:center\">\r\n");
      out.write("			");
 
				request.setCharacterEncoding("UTF-8");
				Connection conn = null;
				PreparedStatement pstmt = null;
				String bor_no = request.getParameter("bor_no");
				String bookname = request.getParameter("bookname");
				try{
					conn = Util.getConnection();
					String sql = "select r.bor_no, m.m_name, m.m_no, m.job, r.bookname, r.bor_date from borrow_tbl r, mem_tbl m where m.m_no = r.m_no and bor_no = ?";
					pstmt = conn.prepareStatement(sql);
					pstmt.setString(1,bor_no);
					ResultSet rs = pstmt.executeQuery();
					rs.next();
			
      out.write("\r\n");
      out.write("		<input type=\"hidden\" name=\"mode\" value=\"return\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>대여번호</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"bor_no\" value=\"");
      out.print(bor_no);
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("				<td>고객이름</td>\r\n");
      out.write("				<td>\r\n");
      out.write("					<select name=\"m_name\" onchange=\"chk_select(this);\">\r\n");
      out.write("						<option selected>");
      out.print(rs.getString(2) );
      out.write("</option>						\r\n");
      out.write("					</select>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>고객번호</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"m_no\" value=\"");
      out.print(rs.getString(3));
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>직업</td>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"radio\" name=\"job\" value=\"학생\" ");
if(rs.getString(4).equals("학생")) out.println("checked");
      out.write("> 학생\r\n");
      out.write("					<input type=\"radio\" name=\"job\" value=\"교사\" ");
if(rs.getString(4).equals("교사")) out.println("checked");
      out.write("> 교사\r\n");
      out.write("					<input type=\"radio\" name=\"job\" value=\"외부인\" ");
if(rs.getString(4).equals("외부인")) out.println("checked");
      out.write("> 외부인\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>도서명</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"bookname\" value=\"");
      out.print(rs.getString(5));
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>대여날짜</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"bor_date\" value=\"");
      out.print(rs.getDate(6));
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\">\r\n");
      out.write("					<input type=\"submit\" value=\"반납하기\" onclick=\"return chk_borrow()\">\r\n");
      out.write("					<input type=\"reset\" value=\"뒤로가기\" onclick=\"history.go(-1);\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

				}
			catch(Exception e){
				e.printStackTrace();
			}
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
